{"version":3,"file":"src_app_components_random_random_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAKoG;AAClD;AAC2B;;;;;;;IAKzEK,qEAAA,GAAoC;IAClCA,4DAAA,YAEC;IACCA,oDAAA,GACF;IAAAA,0DAAA,EAAK;IACLA,4DAAA,WAGC;IACCA,uDAAA,kCAE4B;IAC9BA,0DAAA,EAAI;IACNA,mEAAA,EAAe;;;;IAVXA,uDAAA,GACF;IADEA,gEAAA,MAAAS,MAAA,CAAAC,KAAA,CAAAC,QAAA,GAAAC,OAAA,QACF;IAMIZ,uDAAA,GAAuC;IAAvCA,wDAAA,WAAAS,MAAA,CAAAC,KAAA,CAAAC,QAAA,GAAAG,SAAA,GAAuC;;;AAdjD,MAuBaC,eAAe;EAG1BC,YACYC,YAAmB,EACnBC,KAAY,EACZC,KAAY;IAFZ,KAAAF,YAAY,GAAZA,YAAY;IACZ,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,KAAK,GAALA,KAAK;IALP,KAAAT,KAAK,GAAkC,IAAIZ,iDAAe,CAAC,IAAI,CAAC;IAOxE,IAAI,CAACqB,KAAK,CAACC,QAAQ,CAAC,gCAAgC,CAAC;EACvD;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACH,KAAK,CAACI,QAAQ,CAChBC,IAAI,CAACxB,+CAAS,CAAC,MAAM,IAAI,CAACkB,YAAY,CAACO,aAAa,EAAE,CAAC,CAAC,CACxDC,SAAS,CAAC;MACTC,IAAI,EAAGC,IAAI,IAAK,IAAI,CAACjB,KAAK,CAACgB,IAAI,CAACC,IAAI;KACrC,CAAC;IAEJ;IACA,IAAI,CAACT,KAAK,CAACA,KAAK,EAAE;EACpB;;AApBWH,eAAe;mBAAfA,eAAe,EAAAf,+DAAA,CAAA6B,kDAAA,GAAA7B,+DAAA,CAAA+B,kDAAA,GAAA/B,+DAAA,CAAAiC,4DAAA;AAAA;AAAflB,eAAe;QAAfA,eAAe;EAAAoB,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAArC,iEAAA;EAAAuC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MApBxB5C,wDAAA,IAAA+C,uCAAA,0BAce;;;;MAdA/C,wDAAA,SAAAA,yDAAA,OAAA6C,GAAA,CAAAnC,KAAA,EAAmB;;;iBAkB1Bb,iDAAI,EAAED,sDAAS,EAAED,4GAA0B;EAAAsD,aAAA;AAAA","sources":["./src/app/components/random/random.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CiteI } from '../../models/Cite';\nimport { Cites } from '../../services/Cites';\nimport { Click } from '../../services/Click';\nimport { Title } from '@angular/platform-browser';\nimport { LinkCitesByAuthorComponent } from '../link-cites-by-author/link-cites-by-author.component';\nimport { AsyncPipe, NgIf } from '@angular/common';\nimport { BehaviorSubject, Observable, ReplaySubject, switchMap } from 'rxjs';\n\n@Component({\n  selector: 'app-random',\n  template: `\n    <ng-container *ngIf=\"cite$ | async\">\n      <h1\n        class=\"my-4 text-3xl md:text-5xl text-violet-800 font-bold leading-tight text-center md:text-left slide-in-bottom-h1\"\n      >\n        {{ cite$.getValue().getCite() }}\n      </h1>\n      <p\n        class=\"leading-normal text-base md:text-2xl mb-8 text-center md:text-left\n              slide-in-bottom-subtitle\"\n      >\n        <app-link-cites-by-author\n          [author]=\"cite$.getValue().getAuthor()\"\n        ></app-link-cites-by-author>\n      </p>\n    </ng-container>\n  `,\n  styles: [],\n  standalone: true,\n  imports: [NgIf, AsyncPipe, LinkCitesByAuthorComponent],\n})\nexport class RandomComponent implements OnInit {\n  protected cite$: BehaviorSubject<CiteI | null> = new BehaviorSubject(null);\n\n  constructor(\n    protected citesService: Cites,\n    protected click: Click,\n    protected title: Title\n  ) {\n    this.title.setTitle('Citations - Citation aléatoire');\n  }\n\n  ngOnInit(): void {\n    this.click.refresh$\n      .pipe(switchMap(() => this.citesService.getRandomCite()))\n      .subscribe({\n        next: (cite) => this.cite$.next(cite),\n      });\n\n    // for a page refresh, no click are thrown from the navbar, so i have to simulate it here : is there a best pattern\n    this.click.click();\n  }\n}\n"],"names":["LinkCitesByAuthorComponent","AsyncPipe","NgIf","BehaviorSubject","switchMap","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","cite$","getValue","getCite","ɵɵproperty","getAuthor","RandomComponent","constructor","citesService","click","title","setTitle","ngOnInit","refresh$","pipe","getRandomCite","subscribe","next","cite","ɵɵdirectiveInject","i1","Cites","i2","Click","i3","Title","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","RandomComponent_Template","rf","ctx","ɵɵtemplate","RandomComponent_ng_container_0_Template","ɵɵpipeBind1","encapsulation"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}