{
  "version": 3,
  "sources": ["src/app/components/random/random.component.ts"],
  "sourcesContent": ["/* eslint-disable prettier/prettier */\nimport { Component, OnInit, inject, runInInjectionContext } from '@angular/core';\nimport { CiteI } from '../../models/Cite';\nimport { Cites } from '../../services/Cites';\nimport { Click } from '../../services/Click';\nimport { Title } from '@angular/platform-browser';\nimport { LinkCitesByAuthorComponent } from '../link-cites-by-author/link-cites-by-author.component';\nimport { AsyncPipe, NgIf } from '@angular/common';\nimport { BehaviorSubject, Observable, ReplaySubject, skip, switchMap, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-random',\n  template: `\n    @if (cite$ | async; as cite) {\n      <h1\n        class=\"my-4 text-3xl md:text-5xl text-violet-800 font-bold leading-tight text-center md:text-left slide-in-bottom-h1\"\n      >\n        {{ cite.getCite() }}\n      </h1>\n      <p\n        class=\"leading-normal text-base md:text-2xl mb-8 text-center md:text-left\n              slide-in-bottom-subtitle\"\n      >\n        <app-link-cites-by-author\n          [author]=\"cite.getAuthor()\"\n        ></app-link-cites-by-author>\n      </p>\n    }\n  `,\n  standalone: true,\n  providers: [],\n  imports: [NgIf, AsyncPipe, LinkCitesByAuthorComponent],\n})\nexport class RandomComponent implements OnInit {\n  private cite: BehaviorSubject<CiteI> = new BehaviorSubject({} as CiteI);\n  protected cite$ = this.cite.asObservable().pipe(skip(1));\n  \n  protected citesService: Cites = inject(Cites);\n  protected click: Click = inject(Click);\n  protected title: Title = inject(Title);\n\n  constructor(\n  ) {\n    this.title.setTitle('Citations - Citation alÃ©atoire');\n\n    this.click.refresh$\n      .pipe(tap((value) => console.info('refresh subscribe', value)), switchMap(() => this.citesService.getRandomCite()))\n      .subscribe({\n        next: (cite) => this.cite.next(cite),\n      });\n  }\n\n  ngOnInit(): void {\n    \n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcMA,IAAAC,yBAAA,GAAA,MAAA,CAAA;AAGED,IAAAE,iBAAA,CAAA;AACFF,IAAAG,uBAAA;AACAH,IAAAC,yBAAA,GAAA,KAAA,CAAA;AAIED,IAAAI,oBAAA,GAAA,4BAAA,CAAA;AAGFJ,IAAAG,uBAAA;;;AATEH,IAAAK,oBAAA,CAAA;AAAAL,IAAAM,6BAAA,KAAAC,IAAAC,QAAA,GAAA,GAAA;AAOER,IAAAK,oBAAA,CAAA;AAAAL,IAAAS,qBAAA,UAAAF,IAAAG,UAAA,CAAA;;;AASV,IAAaC,kBAAe,uBAAA;AAAtB,QAAOA,mBAAP,MAAOA,iBAAe;IAQ1BC,cAAA;AAPQ,WAAAC,OAA+B,IAAIC,gBAAgB,CAAA,CAAW;AAC5D,WAAAC,QAAQ,KAAKF,KAAKG,aAAY,EAAGC,KAAKC,KAAK,CAAC,CAAC;AAE7C,WAAAC,eAAsBC,OAAOC,KAAK;AAClC,WAAAC,QAAeF,OAAOG,KAAK;AAC3B,WAAAC,QAAeJ,OAAOK,KAAK;AAInC,WAAKD,MAAME,SAAS,mCAAgC;AAEpD,WAAKJ,MAAMK,SACRV,KAAKW,IAAKC,WAAUC,QAAQC,KAAK,qBAAqBF,KAAK,CAAC,GAAGG,UAAU,MAAM,KAAKb,aAAac,cAAa,CAAE,CAAC,EACjHC,UAAU;QACTC,MAAOtB,UAAS,KAAKA,KAAKsB,KAAKtB,IAAI;OACpC;IACL;IAEAuB,WAAQ;IAER;;;qBArBWzB,kBAAe;EAAA;;UAAfA;IAAe0B,WAAA,CAAA,CAAA,YAAA,CAAA;IAAAC,YAAA;IAAAC,UAAA,CAAAC,6BAHf,CAAA,CAAE,GAAAC,6BAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,QAAA,CAAA,CAAA,GAAA,QAAA,YAAA,eAAA,mBAAA,aAAA,iBAAA,eAAA,gBAAA,oBAAA,GAAA,CAAA,GAAA,kBAAA,aAAA,eAAA,QAAA,eAAA,gBAAA,0BAAA,GAAA,CAAA,GAAA,QAAA,CAAA;IAAAC,UAAA,SAAAC,yBAAAC,IAAAxC,KAAA;AAAA,UAAAwC,KAAA,GAAA;AAjBX/C,QAAAgD,qBAAA,GAAAC,wCAAA,GAAA,CAAA;;;;;AAAAjD,QAAAkD,wBAAA,IAAAC,8BAAAC,sBAAA,GAAA,GAAA7C,IAAAQ,KAAA,KAAA,IAAA,IAAAoC,2BAAA;;;mBAkBcE,WAAWC,0BAA0B;IAAAC,eAAA;EAAA,CAAA;AAEjD,MAAO5C,mBAAP;SAAOA;AAAe,GAAA;",
  "names": ["i0", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx", "getCite", "\u0275\u0275property", "getAuthor", "RandomComponent", "constructor", "cite", "BehaviorSubject", "cite$", "asObservable", "pipe", "skip", "citesService", "inject", "Cites", "click", "Click", "title", "Title", "setTitle", "refresh$", "tap", "value", "console", "info", "switchMap", "getRandomCite", "subscribe", "next", "ngOnInit", "selectors", "standalone", "features", "\u0275\u0275ProvidersFeature", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "RandomComponent_Template", "rf", "\u0275\u0275template", "RandomComponent_Conditional_0_Template", "\u0275\u0275conditional", "RandomComponent_contFlowTmp", "\u0275\u0275pipeBind1", "AsyncPipe", "LinkCitesByAuthorComponent", "encapsulation"]
}
