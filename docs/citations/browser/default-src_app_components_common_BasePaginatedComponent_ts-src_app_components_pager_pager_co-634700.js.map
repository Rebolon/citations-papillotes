{"version":3,"file":"default-src_app_components_common_BasePaginatedComponent_ts-src_app_components_pager_pager_co-634700.js","mappings":"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","sources":["./src/app/components/common/BasePaginatedComponent.ts","./src/app/components/pager/pager.component.ts","./src/app/services/Pager/pager-list-parts.ts","./src/app/services/Pager/pager.service.ts","./src/app/tools/Device.ts"],"sourcesContent":["export abstract class BasePaginatedComponent {\n  protected currentPage: number;\n  protected itemsPerPage = 10;\n\n  getCurrentPage(): number {\n    return this.currentPage;\n  }\n\n  setCurrentPage(event): void {\n    this.currentPage = event;\n  }\n\n  getItemsPerPage(): number {\n    return this.itemsPerPage;\n  }\n\n  abstract setPaginatedList(ev: any[]): void;\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { PagerService } from '../../services/Pager/pager.service';\nimport { PagerOptionsInterface } from '../../services/Pager/pager.interface';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport { NgIf, NgClass, NgFor } from '@angular/common';\n\n@Component({\n    selector: 'app-pager',\n    template: `\n    <nav>\n      <ul *ngIf=\"hasList()\" class=\"ng-pager nav\" aria-label=\"Pagination\">\n        <li class=\"w-12\">\n          <a\n            [ngClass]=\"{ disabled: previousIsDisabled() }\"\n            (click)=\"pager.goToFirstPage()\"\n          >\n            <span>{{ pager.getPagerItemList().getFirstEdges()[0].label }}</span>\n          </a>\n        </li>\n        <li class=\"w-12\">\n          <a\n            [ngClass]=\"{ disabled: previousIsDisabled() }\"\n            (click)=\"pager.goToPreviousPage()\"\n          >\n            <span>{{ pager.getPagerItemList().getFirstEdges()[1].label }}</span>\n          </a>\n        </li>\n\n        <li\n          *ngFor=\"let item of pager.getPagerItemList().getNumbers()\"\n          class=\"w-12\"\n        >\n          <a\n            [ngClass]=\"{ current: isCurrentPage(item.index) }\"\n            (click)=\"pager.goToPage(item.index)\"\n          >\n            <span>{{ item.label }}</span>\n          </a>\n        </li>\n\n        <li class=\"w-12\">\n          <a\n            [ngClass]=\"{ disabled: nextIsDisabled() }\"\n            (click)=\"pager.goToNextPage()\"\n          >\n            <span>{{ pager.getPagerItemList().getLastEdges()[0].label }}</span>\n          </a>\n        </li>\n        <li class=\"w-12\">\n          <a\n            [ngClass]=\"{ disabled: nextIsDisabled() }\"\n            (click)=\"pager.goToLastPage()\"\n          >\n            <span>{{ pager.getPagerItemList().getLastEdges()[1].label }}</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  `,\n    styleUrls: ['./pager.component.scss'],\n    providers: [PagerService],\n    standalone: true,\n    imports: [\n        NgIf,\n        NgClass,\n        NgFor,\n    ],\n})\nexport class PagerComponent implements OnInit, OnChanges {\n  @Input() list: Array<any> | number = 0;\n  @Input() options?: PagerOptionsInterface;\n  private paginatedList: BehaviorSubject<Array<any>> = new BehaviorSubject(\n    this.pager.getPaginatedList()\n  );\n  @Output() paginatedList$ = this.paginatedList\n    .asObservable()\n    .pipe(filter((value) => !!value));\n\n  constructor(public pager: PagerService) {}\n\n  // do i need ngOnInit, or ngOnChanges is enough ?\n  ngOnInit(): void {\n    this.pager.init(this.list, this.options);\n    this.pager.currentOffset$.subscribe((value) => {\n      this.paginatedList.next(this.pager.getPaginatedList());\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes.list) {\n      return;\n    }\n\n    if (changes.list.isFirstChange()) {\n      return;\n    }\n\n    this.pager.init(changes.list.currentValue, this.options);\n  }\n\n  previousIsDisabled(): boolean {\n    return this.pager.getCurrentPage() === this.pager.getPreviousPage();\n  }\n\n  nextIsDisabled(): boolean {\n    return this.pager.getCurrentPage() === this.pager.getNextPage();\n  }\n\n  isCurrentPage(index: number): boolean {\n    return this.pager.isCurrentPage(index);\n  }\n\n  hasList(): boolean {\n    if (typeof this.list === 'object') {\n      return this.pager.getTotalPage() > 1;\n    }\n\n    return false;\n  }\n}\n","import { PagerListInterface, PagerListPartsInterface } from './pager.interface';\n\nexport class PagerListParts implements PagerListPartsInterface {\n  private pager: Array<PagerListInterface> = [];\n  private pagerFirstEdges: Array<PagerListInterface> = [];\n  private pagerLastEdges: Array<PagerListInterface> = [];\n  private pagerNumbers: Array<PagerListInterface> = [];\n\n  constructor(pager: Array<PagerListInterface>) {\n    this.pager = pager;\n    this.pagerFirstEdges = this.pager.filter((value, index) => {\n      return index < 2;\n    });\n\n    this.pagerLastEdges = this.pager\n      .slice()\n      .reverse()\n      .filter((value, index) => {\n        return index < 2;\n      })\n      .reverse();\n\n    this.pagerNumbers = this.pager.filter((value, index) => {\n      return (\n        !this.pagerFirstEdges.includes(value) &&\n        !this.pagerLastEdges.includes(value)\n      );\n    });\n  }\n\n  getAll(): Array<PagerListInterface> {\n    return this.pager;\n  }\n\n  getFirstEdges(): Array<PagerListInterface> {\n    return this.pagerFirstEdges;\n  }\n\n  getLastEdges(): Array<PagerListInterface> {\n    return this.pagerLastEdges;\n  }\n\n  getNumbers(): Array<PagerListInterface> {\n    return this.pagerNumbers;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  PagerInterface,\n  PagerListInterface,\n  PagerListPartsInterface,\n  PagerNavigationInterface,\n  PagerOptionsInterface,\n  PagerTemplateInterface,\n} from './pager.interface';\nimport { PagerListParts } from './pager-list-parts';\nimport { BehaviorSubject, filter, map } from 'rxjs';\n\nexport class TotalPageNotSet extends Error {}\nexport class FirstPageNotSet extends Error {}\nexport class LastPageNotSet extends Error {}\nexport class CurrentPageNotSet extends Error {}\nexport class PageRequestedIsLessThanFirstPage extends Error {}\nexport class PagerAlreadyInitialized extends Error {}\nexport class PageIndexDoesNotExists extends Error {}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PagerService\n  implements PagerInterface, PagerNavigationInterface, PagerTemplateInterface\n{\n  private originalList = [];\n  private itemPerPage = 5;\n  private maxPagerItem = 5;\n  private firstPage = 1;\n  private totalPage = 1;\n  private lastPage = 1;\n  private previousPage = 1;\n  private nextPage = 1;\n  private currentPage = new BehaviorSubject(1);\n  private pagerIndexList: Array<number> = [];\n  private pagerItemList: PagerListPartsInterface =\n    {} as PagerListPartsInterface;\n  public currentPage$ = this.currentPage\n    .asObservable()\n    .pipe(filter((value) => !!value));\n  public currentOffset$ = this.currentPage.asObservable().pipe(\n    filter((value) => !!value),\n    map((value) => {\n      return this.getOffsetForPage(value);\n    })\n  );\n\n  constructor() {}\n\n  init(list: Array<any> | number, options?: PagerOptionsInterface): void {\n    /** Seems to be a source of bug : authors page, swith between alpha and total fails because of this\n    if (this.pagerIndexList.length) {\n      return\n    }*/\n\n    if (typeof list !== 'object') {\n      this.originalList = new Array(list).fill(0);\n    } else {\n      this.originalList = list;\n    }\n\n    this.setOptions(options)\n      .resetPage()\n      .setTotalPage(list)\n      .calculateLastPage()\n      .calculateCurrentPage()\n      .calculatePreviousPage()\n      .calculateNextPage()\n      .createIndexList()\n      .buildPagerList();\n  }\n\n  isCurrentPage(pageIndex: number): boolean {\n    return this.currentPage.getValue() === pageIndex;\n  }\n\n  getOffset(): number {\n    return this.getOffsetForPage(this.getCurrentPage());\n  }\n\n  getOffsetForPage(page: number): number {\n    if (page < this.firstPage) {\n      throw new PageRequestedIsLessThanFirstPage();\n    }\n\n    if (page === this.firstPage) {\n      return 0;\n    }\n\n    return (page - 1) * this.itemPerPage;\n  }\n\n  getTotalPage(): number {\n    return this.totalPage;\n  }\n\n  getFirstPage(): number {\n    return this.firstPage;\n  }\n\n  getLastPage(): number {\n    return this.lastPage;\n  }\n\n  getCurrentPage(): number {\n    return this.currentPage.getValue();\n  }\n\n  getPreviousPage(): number {\n    return this.previousPage;\n  }\n\n  getNextPage(): number {\n    return this.nextPage;\n  }\n\n  getPaginatedList(): Array<any> {\n    const startOffset = this.getOffset();\n    const endOffset = startOffset + this.itemPerPage;\n\n    return this.originalList.slice(startOffset, endOffset);\n  }\n\n  goToPage(pageIndex: number): number {\n    if (this.getCurrentPage() === pageIndex) {\n      return this.getCurrentPage();\n    }\n\n    if (this.pagerIndexList.includes(pageIndex)) {\n      this.currentPage.next(pageIndex);\n      this.calculatePreviousPage();\n      this.calculateNextPage();\n      this.createIndexList();\n      this.buildPagerList();\n    } else {\n      throw new PageIndexDoesNotExists();\n    }\n\n    return this.currentPage.getValue();\n  }\n\n  goToFirstPage(): number {\n    if (this.currentPage.getValue() === this.firstPage) {\n      return this.currentPage.getValue();\n    }\n\n    this.currentPage.next(this.firstPage);\n    this.previousPage = this.firstPage;\n    this.calculateNextPage();\n    this.createIndexList();\n    this.buildPagerList();\n\n    return this.currentPage.getValue();\n  }\n\n  goToLastPage(): number {\n    if (this.currentPage.getValue() === this.lastPage) {\n      return this.currentPage.getValue();\n    }\n\n    this.currentPage.next(this.lastPage);\n    this.nextPage = this.lastPage;\n    this.calculatePreviousPage();\n    this.createIndexList();\n    this.buildPagerList();\n\n    return this.currentPage.getValue();\n  }\n\n  goToNextPage(): number {\n    if (this.currentPage.getValue() === this.nextPage) {\n      return this.currentPage.getValue();\n    }\n\n    this.previousPage = this.currentPage.getValue();\n    this.currentPage.next(this.nextPage);\n    this.calculateNextPage();\n    this.createIndexList();\n    this.buildPagerList();\n\n    return this.currentPage.getValue();\n  }\n\n  goToPreviousPage(): number {\n    if (this.currentPage.getValue() === this.previousPage) {\n      return this.currentPage.getValue();\n    }\n\n    this.nextPage = this.currentPage.getValue();\n    this.currentPage.next(this.previousPage);\n    this.calculatePreviousPage();\n    this.createIndexList();\n    this.buildPagerList();\n\n    return this.currentPage.getValue();\n  }\n\n  getPagerIndexList(): Array<number> {\n    return this.pagerIndexList;\n  }\n\n  getPagerItemList(): PagerListPartsInterface {\n    return this.pagerItemList;\n  }\n\n  private setOptions(options?: PagerOptionsInterface): PagerService {\n    if (!options) {\n      return this;\n    }\n\n    if (typeof options.itemPerPage !== 'undefined') {\n      this.itemPerPage = options.itemPerPage;\n    }\n\n    if (typeof options.maxPagerItem !== 'undefined') {\n      this.maxPagerItem = options.maxPagerItem;\n    }\n\n    return this;\n  }\n\n  private setTotalPage(list: Array<any> | number): PagerService {\n    let count = typeof list === 'object' ? list.length : list;\n    this.totalPage = Math.ceil(count / this.itemPerPage);\n\n    return this;\n  }\n\n  private setFirstPage(firstPage: number): PagerService {\n    this.firstPage = firstPage >= 0 ? firstPage : this.firstPage;\n\n    return this;\n  }\n\n  private resetPage(): PagerService {\n    this.currentPage.next(this.firstPage);\n\n    return this;\n  }\n\n  private calculateLastPage(): PagerService {\n    if (this.totalPage === null) {\n      throw new TotalPageNotSet();\n    }\n\n    if (this.firstPage === null) {\n      throw new FirstPageNotSet();\n    }\n\n    this.lastPage = this.totalPage - 1 + this.firstPage;\n\n    return this;\n  }\n\n  private calculateCurrentPage(): PagerService {\n    if (this.lastPage === null) {\n      throw new LastPageNotSet();\n    }\n\n    if (this.firstPage === null) {\n      throw new FirstPageNotSet();\n    }\n\n    const currentPage = this.getCurrentPage();\n\n    this.currentPage.next(\n      this.currentPage.getValue() < this.firstPage\n        ? this.firstPage\n        : currentPage > this.lastPage\n        ? this.lastPage\n        : currentPage\n    );\n\n    return this;\n  }\n\n  private calculatePreviousPage(): PagerService {\n    if (this.currentPage === null) {\n      throw new CurrentPageNotSet();\n    }\n    if (this.firstPage === null) {\n      throw new FirstPageNotSet();\n    }\n\n    const previousPage = this.currentPage.getValue() - 1;\n    this.previousPage =\n      previousPage >= this.firstPage ? previousPage : this.firstPage;\n\n    return this;\n  }\n\n  /**\n   * @todo _nextPage depends on curPage and lastPage => there must be events to modify this property when one of those are modified\n   */\n  private calculateNextPage(): PagerService {\n    if (this.lastPage === null) {\n      throw new LastPageNotSet();\n    }\n    if (this.currentPage === null) {\n      throw new CurrentPageNotSet();\n    }\n\n    const nextPage = this.currentPage.getValue() + 1;\n    this.nextPage = nextPage <= this.lastPage ? nextPage : this.lastPage;\n\n    return this;\n  }\n\n  private createIndexList(): PagerService {\n    if (this.lastPage === null) {\n      throw new LastPageNotSet();\n    }\n\n    if (this.currentPage === null) {\n      throw new CurrentPageNotSet();\n    }\n\n    if (this.totalPage === null) {\n      throw new TotalPageNotSet();\n    }\n\n    if (this.firstPage === null) {\n      throw new FirstPageNotSet();\n    }\n\n    const nbItemOnSide = Math.floor(this.maxPagerItem / 2);\n    const nbItemPerPageFromEnd = this.lastPage - this.maxPagerItem + 1;\n    let startOffset;\n\n    if (this.currentPage.getValue() <= nbItemOnSide) {\n      startOffset = this.firstPage;\n    } else if (this.lastPage - this.currentPage.getValue() <= nbItemOnSide) {\n      startOffset =\n        nbItemPerPageFromEnd <= this.firstPage\n          ? this.firstPage\n          : nbItemPerPageFromEnd;\n    } else {\n      startOffset = this.currentPage.getValue() - nbItemOnSide;\n    }\n\n    const nbItemPerPageFromStart = startOffset + (this.maxPagerItem - 1);\n    const endOffset =\n      nbItemPerPageFromStart > this.lastPage\n        ? this.lastPage\n        : nbItemPerPageFromStart;\n\n    this.pagerIndexList = [];\n    for (let i = startOffset; i <= endOffset; i++) {\n      this.pagerIndexList.push(i);\n    }\n\n    return this;\n  }\n\n  private buildPagerList(): PagerListPartsInterface {\n    let pager: Array<PagerListInterface> = [];\n\n    if (this.pagerIndexList.length) {\n      this.pagerIndexList.forEach((item) => {\n        pager.push({\n          index: item,\n          label: item.toString(),\n        });\n      });\n\n      pager = pager.filter((item, index) => {\n        return index < this.maxPagerItem;\n      });\n    }\n\n    pager.unshift({\n      index: this.getPreviousPage(),\n      label: '<',\n    });\n\n    pager.unshift({\n      index: this.getFirstPage(),\n      label: '<<',\n    });\n\n    pager.push({\n      index: this.getNextPage(),\n      label: '>',\n    });\n    pager.push({\n      index: this.getLastPage(),\n      label: '>>',\n    });\n\n    this.pagerItemList = new PagerListParts(pager);\n\n    return this.pagerItemList;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Device {\n  isMobile(): boolean {\n    // This check is for prerender prevent errors\n    return Object.keys(navigator).length\n      ? navigator.userAgent.includes('Mobile')\n      : false;\n  }\n\n  isDesktop(): boolean {\n    return !this.isMobile();\n  }\n}\n"],"names":["BasePaginatedComponent","constructor","itemsPerPage","getCurrentPage","currentPage","setCurrentPage","event","getItemsPerPage","PagerService","BehaviorSubject","filter","NgIf","NgClass","NgFor","i0","ɵɵelementStart","ɵɵlistener","PagerComponent_ul_1_li_9_Template_a_click_1_listener","restoredCtx","ɵɵrestoreView","_r4","item_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","pager","goToPage","index","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r1","isCurrentPage","ɵɵtextInterpolate","label","PagerComponent_ul_1_Template_a_click_2_listener","_r6","ctx_r5","goToFirstPage","PagerComponent_ul_1_Template_a_click_6_listener","ctx_r7","goToPreviousPage","ɵɵtemplate","PagerComponent_ul_1_li_9_Template","PagerComponent_ul_1_Template_a_click_11_listener","ctx_r8","goToNextPage","PagerComponent_ul_1_Template_a_click_15_listener","ctx_r9","goToLastPage","_c1","ctx_r0","previousIsDisabled","getPagerItemList","getFirstEdges","getNumbers","nextIsDisabled","getLastEdges","PagerComponent","list","paginatedList","getPaginatedList","paginatedList$","asObservable","pipe","value","ngOnInit","init","options","currentOffset$","subscribe","next","ngOnChanges","changes","isFirstChange","currentValue","getPreviousPage","getNextPage","hasList","getTotalPage","ɵɵdirectiveInject","i1","selectors","inputs","outputs","standalone","features","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","PagerComponent_Template","rf","ctx","PagerComponent_ul_1_Template","styles","PagerListParts","pagerFirstEdges","pagerLastEdges","pagerNumbers","slice","reverse","includes","getAll","map","TotalPageNotSet","Error","FirstPageNotSet","LastPageNotSet","CurrentPageNotSet","PageRequestedIsLessThanFirstPage","PagerAlreadyInitialized","PageIndexDoesNotExists","originalList","itemPerPage","maxPagerItem","firstPage","totalPage","lastPage","previousPage","nextPage","pagerIndexList","pagerItemList","currentPage$","getOffsetForPage","Array","fill","setOptions","resetPage","setTotalPage","calculateLastPage","calculateCurrentPage","calculatePreviousPage","calculateNextPage","createIndexList","buildPagerList","pageIndex","getValue","getOffset","page","getFirstPage","getLastPage","startOffset","endOffset","getPagerIndexList","count","length","Math","ceil","setFirstPage","nbItemOnSide","floor","nbItemPerPageFromEnd","nbItemPerPageFromStart","i","push","forEach","item","toString","unshift","factory","ɵfac","providedIn","Device","isMobile","Object","keys","navigator","userAgent","isDesktop"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}