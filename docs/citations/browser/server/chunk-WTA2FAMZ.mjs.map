{"version":3,"sources":["src/app/components/common/BaseNavbarComponent.ts","src/app/components/navbar-mobile/navbar-mobile.component.ts","src/app/components/search/search.component.ts","src/app/components/navbar-desktop/navbar-desktop.component.ts","src/app/app.component.ts","node_modules/@angular/service-worker/fesm2022/service-worker.mjs","src/environments/environment.ts","src/app/app.routes.ts","src/app/app.config.ts","src/app/app.config.server.ts","src/main.server.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Click } from '../../services/Click';\n\n@Component({\n  template: '',\n})\nexport abstract class BaseNavbarComponent<T = any> {\n  constructor(protected click: Click) {}\n\n  public refreshRandom(): void {\n    this.click.click();\n  }\n}\n","import { Component, inject } from '@angular/core';\nimport { BaseNavbarComponent } from '../common/BaseNavbarComponent';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { Click } from '../../services/Click';\n\n@Component({\n  selector: 'app-navbar-mobile',\n  template: `\n    <section\n      class=\"md:hidden block fixed inset-x-0 bottom-0 z-10 bg-white shadow\"\n      id=\"bottom-navigation\"\n    >\n      <div class=\"flex justify-between\" id=\"tabs\">\n        <a\n          [queryParams]=\"null\"\n          class=\"w-full hover:text-stone-500 justify-center inline-block text-center pt-2 pb-1\"\n          routerLink=\"/\"\n          title=\"Citation du jour\"\n          aria-label=\"Citation du jour\"\n          routerLinkActive=\"focus:text-violet-800\"\n        >\n          <svg\n            class=\"inline-block mb-1\"\n            width=\"25\"\n            height=\"25\"\n            viewBox=\"0 0 42 42\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <svg\n              class=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n              />\n            </svg>\n          </svg>\n          <span class=\"tab tab-home block text-xs\">Aujourd'hui</span>\n        </a>\n\n        <a\n          [queryParams]=\"null\"\n          class=\"w-full hover:text-stone-500 justify-center inline-block text-center pt-2 pb-1\"\n          routerLink=\"/cites\"\n          title=\"Liste des citations\"\n          aria-label=\"Liste des citations\"\n          routerLinkActive=\"focus:text-violet-800\"\n        >\n          <svg\n            class=\"inline-block mb-1\"\n            width=\"25\"\n            height=\"25\"\n            viewBox=\"0 0 42 42\"\n          >\n            <svg\n              class=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M9 5H7C5.89543 5 5 5.89543 5 7V19C5 20.1046 5.89543 21 7 21H17C18.1046 21 19 20.1046 19 19V7C19 5.89543 18.1046 5 17 5H15M9 5C9 6.10457 9.89543 7 11 7H13C14.1046 7 15 6.10457 15 5M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5M12 12H15M12 16H15M9 12H9.01M9 16H9.01\"\n              />\n            </svg>\n          </svg>\n          <span class=\"tab tab-kategori block text-xs\">Citations</span>\n        </a>\n\n        <a\n        [queryParams]=\"null\"\n          class=\"w-full hover:text-stone-500 justify-center inline-block text-center pt-2 pb-1\"\n          routerLink=\"/authors\"\n          title=\"Liste des auteurs\"\n          aria-label=\"Liste des auteurs\"\n          routerLinkActive=\"focus:text-violet-800\"\n        >\n          <svg\n            class=\"inline-block mb-1\"\n            width=\"25\"\n            height=\"25\"\n            viewBox=\"0 0 42 42\"\n          >\n            <svg\n              class=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M17 20H22V18C22 16.3431 20.6569 15 19 15C18.0444 15 17.1931 15.4468 16.6438 16.1429M17 20H7M17 20V18C17 17.3438 16.8736 16.717 16.6438 16.1429M7 20H2V18C2 16.3431 3.34315 15 5 15C5.95561 15 6.80686 15.4468 7.35625 16.1429M7 20V18C7 17.3438 7.12642 16.717 7.35625 16.1429M7.35625 16.1429C8.0935 14.301 9.89482 13 12 13C14.1052 13 15.9065 14.301 16.6438 16.1429M15 7C15 8.65685 13.6569 10 12 10C10.3431 10 9 8.65685 9 7C9 5.34315 10.3431 4 12 4C13.6569 4 15 5.34315 15 7ZM21 10C21 11.1046 20.1046 12 19 12C17.8954 12 17 11.1046 17 10C17 8.89543 17.8954 8 19 8C20.1046 8 21 8.89543 21 10ZM7 10C7 11.1046 6.10457 12 5 12C3.89543 12 3 11.1046 3 10C3 8.89543 3.89543 8 5 8C6.10457 8 7 8.89543 7 10Z\"\n              />\n            </svg>\n          </svg>\n          <span class=\"tab tab-explore block text-xs\">Auteurs</span>\n        </a>\n\n        <a\n          [queryParams]=\"null\"\n          (click)=\"refreshRandom()\"\n          class=\"w-full hover:text-stone-500 justify-center inline-block text-center pt-2 pb-1\"\n          routerLink=\"/random\"\n          title=\"Une citation au hasard\"\n          aria-label=\"Une citation au hasard\"\n          routerLinkActive=\"focus:text-violet-800\"\n        >\n          <svg\n            class=\"inline-block mb-1\"\n            width=\"25\"\n            height=\"25\"\n            viewBox=\"0 0 42 42\"\n          >\n            <svg\n              class=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\"\n              />\n            </svg>\n          </svg>\n          <span class=\"tab tab-whishlist block text-xs\">Al√©atoire</span>\n        </a>\n      </div>\n    </section>\n  `,\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive],\n})\nexport class NavbarMobileComponent extends BaseNavbarComponent {}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { fromEvent, Subject, debounceTime, map, takeUntil, tap, Observable } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  template: `\n    <!-- don't know why a & input are on 2 rows whereas that if directly in app-component it's on 1 row ??? -->\n    <!--a>\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\" stroke=\"#4A5568\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  </svg>\n</a-->\n    <input\n      #elSearchCite\n      class=\"\"\n      id=\"search_input\"\n      type=\"text\"\n      placeholder=\"Rechercher...\"\n    />\n  `,\n  standalone: true,\n})\nexport class SearchComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('elSearchCite', { static: true }) elSearchCite!: ElementRef;\n\n  // Memory leak prevention: better implementation than an array of Subscription on which we wll loop over\n  // (3 steps documented here)\n  // #1 the properties that will clear Observable\n  protected ngUnsubscribe: Subject<void> = new Subject();\n\n  constructor(\n    protected activatedRouter: ActivatedRoute,\n    protected router: Router\n  ) {}\n\n  ngOnInit(): any {\n    // reset q input when route change\n    this.activatedRouter.queryParamMap.subscribe((params) => {\n      if (!params.get('q')) {\n        this.elSearchCite.nativeElement.value = '';\n\n        return;\n      }\n    });\n  }\n\n  // #2 the event on which we will complete the main Observable property\n  ngOnDestroy(): any {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  ngAfterViewInit(): void {\n    fromEvent(this.elSearchCite.nativeElement, 'keyup')\n      .pipe(\n        map(\n          (event: unknown) =>\n            ((event as Event).currentTarget as HTMLInputElement).value\n        ),\n        debounceTime(500),\n        takeUntil(this.ngUnsubscribe)\n      )\n      .subscribe({\n        next: (next: string) => {\n          this.router.navigate(['/search'], { queryParams: { q: next } });\n        },\n      });\n  }\n}\n","import { Component } from '@angular/core';\nimport { BaseNavbarComponent } from '../common/BaseNavbarComponent';\nimport { SearchComponent } from '../search/search.component';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar-desktop',\n  template: `\n    <nav class=\"flex items-center justify-between p-6 container mx-auto\">\n      <a routerLink=\"/\" title=\"Citation du jour\" aria-label=\"Citation du jour\">\n        <svg\n          version=\"1.1\"\n          width=\"200\"\n          height=\"36\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <path\n            d=\"M11.86,16.55a4.31,4.31,0,0,0-2.11.56,14.44,14.44,0,0,1,4.36-6,1.1,1.1,0,0,0-1.4-1.7c-4,3.25-5.78,7.75-5.78,10.54A5.08,5.08,0,0,0,10,24.58a4.4,4.4,0,0,0,1.88.44,4.24,4.24,0,1,0,0-8.47Z\"\n          ></path>\n          <path\n            d=\"M23,16.55a4.29,4.29,0,0,0-2.11.56,14.5,14.5,0,0,1,4.35-6,1.1,1.1,0,1,0-1.39-1.7c-4,3.25-5.78,7.75-5.78,10.54a5.08,5.08,0,0,0,3,4.61A4.37,4.37,0,0,0,23,25a4.24,4.24,0,1,0,0-8.47Z\"\n          ></path>\n          <rect x=\"0\" y=\"0\" width=\"200\" height=\"36\" fill-opacity=\"0\" />\n          <!-- not sure tailwindcss are working here, so font-size has been added -->\n          <text\n            class=\"text-4xl text-violet-700 font-sans subpixel-antialiased\"\n            x=\"36\"\n            y=\"35\"\n          >\n            Citations\n          </text>\n        </svg>\n      </a>\n\n      <app-search\n        class=\"text-sm text-gray-600 sm:flex\"\n        style=\"padding-top: 16px\"\n      ></app-search>\n\n      <div class=\"text-lg hidden lg:flex\">\n        <a\n          [queryParams]=\"null\"\n          class=\"block mt-4 lg:inline-block hover:text-violet-800 motion-safe:hover:scale-110 lg:mt-0 mr-10\"\n          routerLink=\"/\"\n          title=\"Citation du jour\"\n          aria-label=\"Citation du jour\"\n          routerLinkActive=\"focus:text-violet-800\"\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <svg\n              class=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n              />\n            </svg>\n          </svg>\n        </a>\n\n        <a\n          [queryParams]=\"null\"\n          class=\"block mt-4 lg:inline-block hover:text-violet-800 motion-safe:hover:scale-110 lg:mt-0 mr-10\"\n          routerLink=\"/cites\"\n          title=\"Liste des citations\"\n          aria-label=\"Liste des citations\"\n          routerLinkActive=\"focus:text-violet-800\"\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <svg\n              class=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M9 5H7C5.89543 5 5 5.89543 5 7V19C5 20.1046 5.89543 21 7 21H17C18.1046 21 19 20.1046 19 19V7C19 5.89543 18.1046 5 17 5H15M9 5C9 6.10457 9.89543 7 11 7H13C14.1046 7 15 6.10457 15 5M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5M12 12H15M12 16H15M9 12H9.01M9 16H9.01\"\n              />\n            </svg>\n          </svg>\n        </a>\n\n        <a\n          [queryParams]=\"null\"\n          class=\"block mt-4 lg:inline-block hover:text-violet-800 motion-safe:hover:scale-110 lg:mt-0 mr-10\"\n          routerLink=\"/authors\"\n          title=\"Liste des auteurs\"\n          aria-label=\"Liste des auteurs\"\n          routerLinkActive=\"focus:text-violet-800\"\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <svg\n              class=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M17 20H22V18C22 16.3431 20.6569 15 19 15C18.0444 15 17.1931 15.4468 16.6438 16.1429M17 20H7M17 20V18C17 17.3438 16.8736 16.717 16.6438 16.1429M7 20H2V18C2 16.3431 3.34315 15 5 15C5.95561 15 6.80686 15.4468 7.35625 16.1429M7 20V18C7 17.3438 7.12642 16.717 7.35625 16.1429M7.35625 16.1429C8.0935 14.301 9.89482 13 12 13C14.1052 13 15.9065 14.301 16.6438 16.1429M15 7C15 8.65685 13.6569 10 12 10C10.3431 10 9 8.65685 9 7C9 5.34315 10.3431 4 12 4C13.6569 4 15 5.34315 15 7ZM21 10C21 11.1046 20.1046 12 19 12C17.8954 12 17 11.1046 17 10C17 8.89543 17.8954 8 19 8C20.1046 8 21 8.89543 21 10ZM7 10C7 11.1046 6.10457 12 5 12C3.89543 12 3 11.1046 3 10C3 8.89543 3.89543 8 5 8C6.10457 8 7 8.89543 7 10Z\"\n              />\n            </svg>\n          </svg>\n        </a>\n\n        <a\n          [queryParams]=\"null\"\n          (click)=\"refreshRandom()\"\n          class=\"block mt-4 lg:inline-block hover:text-violet-800 motion-safe:hover:scale-110 lg:mt-0 mr-10\"\n          routerLink=\"/random\"\n          title=\"Une citation au hasard\"\n          aria-label=\"Une citation au hasard\"\n          routerLinkActive=\"focus:text-violet-800\"\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <svg\n              class=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\"\n              />\n            </svg>\n          </svg>\n        </a>\n\n        <a\n          class=\"block lg:inline-block hover:text-violet-800 transform motion-safe:hover:scale-110 lg:mt-0 mr-10\"\n          href=\"https://github.com/Rebolon/citations-papillotes\"\n          title=\"Acc√®s au code source\"\n          aria-label=\"Acc√®s au code source\"\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <svg\n              class=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M10 20L14 4M18 8L22 12L18 16M6 16L2 12L6 8\"\n              />\n            </svg>\n          </svg>\n        </a>\n      </div>\n    </nav>\n  `,\n  standalone: true,\n  imports: [RouterLink, SearchComponent, RouterLinkActive],\n})\nexport class NavbarDesktopComponent extends BaseNavbarComponent {}\n","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { NavbarMobileComponent } from './components/navbar-mobile/navbar-mobile.component';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarDesktopComponent } from './components/navbar-desktop/navbar-desktop.component';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"container min-h-screen flex flex-col\" id=\"app\">\n      <header class=\"top-0 fixed bg-white w-full\">\n        <app-navbar-desktop></app-navbar-desktop>\n      </header>\n\n      <main class=\"grow p-4 pt-24\">\n        <router-outlet></router-outlet>\n      </main>\n\n      <footer class=\"w-full\">\n        <app-navbar-mobile></app-navbar-mobile>\n      </footer>\n    </div>\n  `,\n  standalone: true,\n  imports: [NavbarDesktopComponent, RouterOutlet, NavbarMobileComponent],\n})\nexport class AppComponent {\n  constructor(public title: Title) {\n    this.title.setTitle('Liste de Citations');\n  }\n}\n","/**\n * @license Angular v17.0.1\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, NgZone, ApplicationRef, makeEnvironmentProviders, PLATFORM_ID, APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { defer, throwError, fromEvent, of, concat, Subject, NEVER, merge } from 'rxjs';\nimport { map, filter, switchMap, publish, take, tap, delay } from 'rxjs/operators';\nconst ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\nfunction errorObservable(message) {\n  return defer(() => throwError(new Error(message)));\n}\n/**\n * @publicApi\n */\nclass NgswCommChannel {\n  constructor(serviceWorker) {\n    this.serviceWorker = serviceWorker;\n    if (!serviceWorker) {\n      this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n    } else {\n      const controllerChangeEvents = fromEvent(serviceWorker, 'controllerchange');\n      const controllerChanges = controllerChangeEvents.pipe(map(() => serviceWorker.controller));\n      const currentController = defer(() => of(serviceWorker.controller));\n      const controllerWithChanges = concat(currentController, controllerChanges);\n      this.worker = controllerWithChanges.pipe(filter(c => !!c));\n      this.registration = this.worker.pipe(switchMap(() => serviceWorker.getRegistration()));\n      const rawEvents = fromEvent(serviceWorker, 'message');\n      const rawEventPayload = rawEvents.pipe(map(event => event.data));\n      const eventsUnconnected = rawEventPayload.pipe(filter(event => event && event.type));\n      const events = eventsUnconnected.pipe(publish());\n      events.connect();\n      this.events = events;\n    }\n  }\n  postMessage(action, payload) {\n    return this.worker.pipe(take(1), tap(sw => {\n      sw.postMessage({\n        action,\n        ...payload\n      });\n    })).toPromise().then(() => undefined);\n  }\n  postMessageWithOperation(type, payload, operationNonce) {\n    const waitForOperationCompleted = this.waitForOperationCompleted(operationNonce);\n    const postMessage = this.postMessage(type, payload);\n    return Promise.all([postMessage, waitForOperationCompleted]).then(([, result]) => result);\n  }\n  generateNonce() {\n    return Math.round(Math.random() * 10000000);\n  }\n  eventsOfType(type) {\n    let filterFn;\n    if (typeof type === 'string') {\n      filterFn = event => event.type === type;\n    } else {\n      filterFn = event => type.includes(event.type);\n    }\n    return this.events.pipe(filter(filterFn));\n  }\n  nextEventOfType(type) {\n    return this.eventsOfType(type).pipe(take(1));\n  }\n  waitForOperationCompleted(nonce) {\n    return this.eventsOfType('OPERATION_COMPLETED').pipe(filter(event => event.nonce === nonce), take(1), map(event => {\n      if (event.result !== undefined) {\n        return event.result;\n      }\n      throw new Error(event.error);\n    })).toPromise();\n  }\n  get isEnabled() {\n    return !!this.serviceWorker;\n  }\n}\n\n/**\n * Subscribe and listen to\n * [Web Push\n * Notifications](https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices) through\n * Angular Service Worker.\n *\n * @usageNotes\n *\n * You can inject a `SwPush` instance into any component or service\n * as a dependency.\n *\n * <code-example path=\"service-worker/push/module.ts\" region=\"inject-sw-push\"\n * header=\"app.component.ts\"></code-example>\n *\n * To subscribe, call `SwPush.requestSubscription()`, which asks the user for permission.\n * The call returns a `Promise` with a new\n * [`PushSubscription`](https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription)\n * instance.\n *\n * <code-example path=\"service-worker/push/module.ts\" region=\"subscribe-to-push\"\n * header=\"app.component.ts\"></code-example>\n *\n * A request is rejected if the user denies permission, or if the browser\n * blocks or does not support the Push API or ServiceWorkers.\n * Check `SwPush.isEnabled` to confirm status.\n *\n * Invoke Push Notifications by pushing a message with the following payload.\n *\n * ```ts\n * {\n *   \"notification\": {\n *     \"actions\": NotificationAction[],\n *     \"badge\": USVString,\n *     \"body\": DOMString,\n *     \"data\": any,\n *     \"dir\": \"auto\"|\"ltr\"|\"rtl\",\n *     \"icon\": USVString,\n *     \"image\": USVString,\n *     \"lang\": DOMString,\n *     \"renotify\": boolean,\n *     \"requireInteraction\": boolean,\n *     \"silent\": boolean,\n *     \"tag\": DOMString,\n *     \"timestamp\": DOMTimeStamp,\n *     \"title\": DOMString,\n *     \"vibrate\": number[]\n *   }\n * }\n * ```\n *\n * Only `title` is required. See `Notification`\n * [instance\n * properties](https://developer.mozilla.org/en-US/docs/Web/API/Notification#Instance_properties).\n *\n * While the subscription is active, Service Worker listens for\n * [PushEvent](https://developer.mozilla.org/en-US/docs/Web/API/PushEvent)\n * occurrences and creates\n * [Notification](https://developer.mozilla.org/en-US/docs/Web/API/Notification)\n * instances in response.\n *\n * Unsubscribe using `SwPush.unsubscribe()`.\n *\n * An application can subscribe to `SwPush.notificationClicks` observable to be notified when a user\n * clicks on a notification. For example:\n *\n * <code-example path=\"service-worker/push/module.ts\" region=\"subscribe-to-notification-clicks\"\n * header=\"app.component.ts\"></code-example>\n *\n * You can read more on handling notification clicks in the [Service worker notifications\n * guide](guide/service-worker-notifications).\n *\n * @see [Push Notifications](https://developers.google.com/web/fundamentals/codelabs/push-notifications/)\n * @see [Angular Push Notifications](https://blog.angular-university.io/angular-push-notifications/)\n * @see [MDN: Push API](https://developer.mozilla.org/en-US/docs/Web/API/Push_API)\n * @see [MDN: Notifications API](https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API)\n * @see [MDN: Web Push API Notifications best practices](https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices)\n *\n * @publicApi\n */\nlet SwPush = /*#__PURE__*/(() => {\n  class SwPush {\n    /**\n     * True if the Service Worker is enabled (supported by the browser and enabled via\n     * `ServiceWorkerModule`).\n     */\n    get isEnabled() {\n      return this.sw.isEnabled;\n    }\n    constructor(sw) {\n      this.sw = sw;\n      this.pushManager = null;\n      this.subscriptionChanges = new Subject();\n      if (!sw.isEnabled) {\n        this.messages = NEVER;\n        this.notificationClicks = NEVER;\n        this.subscription = NEVER;\n        return;\n      }\n      this.messages = this.sw.eventsOfType('PUSH').pipe(map(message => message.data));\n      this.notificationClicks = this.sw.eventsOfType('NOTIFICATION_CLICK').pipe(map(message => message.data));\n      this.pushManager = this.sw.registration.pipe(map(registration => registration.pushManager));\n      const workerDrivenSubscriptions = this.pushManager.pipe(switchMap(pm => pm.getSubscription()));\n      this.subscription = merge(workerDrivenSubscriptions, this.subscriptionChanges);\n    }\n    /**\n     * Subscribes to Web Push Notifications,\n     * after requesting and receiving user permission.\n     *\n     * @param options An object containing the `serverPublicKey` string.\n     * @returns A Promise that resolves to the new subscription object.\n     */\n    requestSubscription(options) {\n      if (!this.sw.isEnabled || this.pushManager === null) {\n        return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n      }\n      const pushOptions = {\n        userVisibleOnly: true\n      };\n      let key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n      let applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n      for (let i = 0; i < key.length; i++) {\n        applicationServerKey[i] = key.charCodeAt(i);\n      }\n      pushOptions.applicationServerKey = applicationServerKey;\n      return this.pushManager.pipe(switchMap(pm => pm.subscribe(pushOptions)), take(1)).toPromise().then(sub => {\n        this.subscriptionChanges.next(sub);\n        return sub;\n      });\n    }\n    /**\n     * Unsubscribes from Service Worker push notifications.\n     *\n     * @returns A Promise that is resolved when the operation succeeds, or is rejected if there is no\n     *          active subscription or the unsubscribe operation fails.\n     */\n    unsubscribe() {\n      if (!this.sw.isEnabled) {\n        return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n      }\n      const doUnsubscribe = sub => {\n        if (sub === null) {\n          throw new Error('Not subscribed to push notifications.');\n        }\n        return sub.unsubscribe().then(success => {\n          if (!success) {\n            throw new Error('Unsubscribe failed!');\n          }\n          this.subscriptionChanges.next(null);\n        });\n      };\n      return this.subscription.pipe(take(1), switchMap(doUnsubscribe)).toPromise();\n    }\n    decodeBase64(input) {\n      return atob(input);\n    }\n    static {\n      this.…µfac = function SwPush_Factory(t) {\n        return new (t || SwPush)(i0.…µ…µinject(NgswCommChannel));\n      };\n    }\n    static {\n      this.…µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n        token: SwPush,\n        factory: SwPush.…µfac\n      });\n    }\n  }\n  return SwPush;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Subscribe to update notifications from the Service Worker, trigger update\n * checks, and forcibly activate updates.\n *\n * @see {@link guide/service-worker-communications Service worker communication guide}\n *\n * @publicApi\n */\nlet SwUpdate = /*#__PURE__*/(() => {\n  class SwUpdate {\n    /**\n     * True if the Service Worker is enabled (supported by the browser and enabled via\n     * `ServiceWorkerModule`).\n     */\n    get isEnabled() {\n      return this.sw.isEnabled;\n    }\n    constructor(sw) {\n      this.sw = sw;\n      if (!sw.isEnabled) {\n        this.versionUpdates = NEVER;\n        this.unrecoverable = NEVER;\n        return;\n      }\n      this.versionUpdates = this.sw.eventsOfType(['VERSION_DETECTED', 'VERSION_INSTALLATION_FAILED', 'VERSION_READY', 'NO_NEW_VERSION_DETECTED']);\n      this.unrecoverable = this.sw.eventsOfType('UNRECOVERABLE_STATE');\n    }\n    /**\n     * Checks for an update and waits until the new version is downloaded from the server and ready\n     * for activation.\n     *\n     * @returns a promise that\n     * - resolves to `true` if a new version was found and is ready to be activated.\n     * - resolves to `false` if no new version was found\n     * - rejects if any error occurs\n     */\n    checkForUpdate() {\n      if (!this.sw.isEnabled) {\n        return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n      }\n      const nonce = this.sw.generateNonce();\n      return this.sw.postMessageWithOperation('CHECK_FOR_UPDATES', {\n        nonce\n      }, nonce);\n    }\n    /**\n     * Updates the current client (i.e. browser tab) to the latest version that is ready for\n     * activation.\n     *\n     * In most cases, you should not use this method and instead should update a client by reloading\n     * the page.\n     *\n     * <div class=\"alert is-important\">\n     *\n     * Updating a client without reloading can easily result in a broken application due to a version\n     * mismatch between the [application shell](guide/glossary#app-shell) and other page resources,\n     * such as [lazy-loaded chunks](guide/glossary#lazy-loading), whose filenames may change between\n     * versions.\n     *\n     * Only use this method, if you are certain it is safe for your specific use case.\n     *\n     * </div>\n     *\n     * @returns a promise that\n     *  - resolves to `true` if an update was activated successfully\n     *  - resolves to `false` if no update was available (for example, the client was already on the\n     *    latest version).\n     *  - rejects if any error occurs\n     */\n    activateUpdate() {\n      if (!this.sw.isEnabled) {\n        return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n      }\n      const nonce = this.sw.generateNonce();\n      return this.sw.postMessageWithOperation('ACTIVATE_UPDATE', {\n        nonce\n      }, nonce);\n    }\n    static {\n      this.…µfac = function SwUpdate_Factory(t) {\n        return new (t || SwUpdate)(i0.…µ…µinject(NgswCommChannel));\n      };\n    }\n    static {\n      this.…µprov = /* @__PURE__ */i0.…µ…µdefineInjectable({\n        token: SwUpdate,\n        factory: SwUpdate.…µfac\n      });\n    }\n  }\n  return SwUpdate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*!\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SCRIPT = /*#__PURE__*/new InjectionToken('NGSW_REGISTER_SCRIPT');\nfunction ngswAppInitializer(injector, script, options, platformId) {\n  return () => {\n    if (!(isPlatformBrowser(platformId) && 'serviceWorker' in navigator && options.enabled !== false)) {\n      return;\n    }\n    // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n    // becomes active. This allows the SW to initialize itself even if there is no application\n    // traffic.\n    navigator.serviceWorker.addEventListener('controllerchange', () => {\n      if (navigator.serviceWorker.controller !== null) {\n        navigator.serviceWorker.controller.postMessage({\n          action: 'INITIALIZE'\n        });\n      }\n    });\n    let readyToRegister$;\n    if (typeof options.registrationStrategy === 'function') {\n      readyToRegister$ = options.registrationStrategy();\n    } else {\n      const [strategy, ...args] = (options.registrationStrategy || 'registerWhenStable:30000').split(':');\n      switch (strategy) {\n        case 'registerImmediately':\n          readyToRegister$ = of(null);\n          break;\n        case 'registerWithDelay':\n          readyToRegister$ = delayWithTimeout(+args[0] || 0);\n          break;\n        case 'registerWhenStable':\n          readyToRegister$ = !args[0] ? whenStable(injector) : merge(whenStable(injector), delayWithTimeout(+args[0]));\n          break;\n        default:\n          // Unknown strategy.\n          throw new Error(`Unknown ServiceWorker registration strategy: ${options.registrationStrategy}`);\n      }\n    }\n    // Don't return anything to avoid blocking the application until the SW is registered.\n    // Also, run outside the Angular zone to avoid preventing the app from stabilizing (especially\n    // given that some registration strategies wait for the app to stabilize).\n    // Catch and log the error if SW registration fails to avoid uncaught rejection warning.\n    const ngZone = injector.get(NgZone);\n    ngZone.runOutsideAngular(() => readyToRegister$.pipe(take(1)).subscribe(() => navigator.serviceWorker.register(script, {\n      scope: options.scope\n    }).catch(err => console.error('Service worker registration failed with:', err))));\n  };\n}\nfunction delayWithTimeout(timeout) {\n  return of(null).pipe(delay(timeout));\n}\nfunction whenStable(injector) {\n  const appRef = injector.get(ApplicationRef);\n  return appRef.isStable.pipe(filter(stable => stable));\n}\nfunction ngswCommChannelFactory(opts, platformId) {\n  return new NgswCommChannel(isPlatformBrowser(platformId) && opts.enabled !== false ? navigator.serviceWorker : undefined);\n}\n/**\n * Token that can be used to provide options for `ServiceWorkerModule` outside of\n * `ServiceWorkerModule.register()`.\n *\n * You can use this token to define a provider that generates the registration options at runtime,\n * for example via a function call:\n *\n * {@example service-worker/registration-options/module.ts region=\"registration-options\"\n *     header=\"app.module.ts\"}\n *\n * @publicApi\n */\nclass SwRegistrationOptions {}\n/**\n * @publicApi\n *\n * Sets up providers to register the given Angular Service Worker script.\n *\n * If `enabled` is set to `false` in the given options, the module will behave as if service\n * workers are not supported by the browser, and the service worker will not be registered.\n *\n * Example usage:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [\n *     provideServiceWorker('ngsw-worker.js')\n *   ],\n * });\n * ```\n */\nfunction provideServiceWorker(script, options = {}) {\n  return makeEnvironmentProviders([SwPush, SwUpdate, {\n    provide: SCRIPT,\n    useValue: script\n  }, {\n    provide: SwRegistrationOptions,\n    useValue: options\n  }, {\n    provide: NgswCommChannel,\n    useFactory: ngswCommChannelFactory,\n    deps: [SwRegistrationOptions, PLATFORM_ID]\n  }, {\n    provide: APP_INITIALIZER,\n    useFactory: ngswAppInitializer,\n    deps: [Injector, SCRIPT, SwRegistrationOptions, PLATFORM_ID],\n    multi: true\n  }]);\n}\n\n/**\n * @publicApi\n */\nlet ServiceWorkerModule = /*#__PURE__*/(() => {\n  class ServiceWorkerModule {\n    /**\n     * Register the given Angular Service Worker script.\n     *\n     * If `enabled` is set to `false` in the given options, the module will behave as if service\n     * workers are not supported by the browser, and the service worker will not be registered.\n     */\n    static register(script, options = {}) {\n      return {\n        ngModule: ServiceWorkerModule,\n        providers: [provideServiceWorker(script, options)]\n      };\n    }\n    static {\n      this.…µfac = function ServiceWorkerModule_Factory(t) {\n        return new (t || ServiceWorkerModule)();\n      };\n    }\n    static {\n      this.…µmod = /* @__PURE__ */i0.…µ…µdefineNgModule({\n        type: ServiceWorkerModule\n      });\n    }\n    static {\n      this.…µinj = /* @__PURE__ */i0.…µ…µdefineInjector({\n        providers: [SwPush, SwUpdate]\n      });\n    }\n  }\n  return ServiceWorkerModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ServiceWorkerModule, SwPush, SwRegistrationOptions, SwUpdate, provideServiceWorker };\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { Routes } from '@angular/router';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    loadComponent: () =>\n      import('./components/home/home.component').then(\n        (c) => c.HomeComponent\n      ) /* */,\n  },\n  {\n    path: 'cites',\n    loadComponent: () =>\n      import('./components/list-cites/list-cites.component').then(\n        (c) => c.ListCitesComponent\n      ) /* */,\n  },\n  {\n    path: 'authors',\n    loadComponent: () =>\n      import('./components/list-authors/list-authors.component').then(\n        (c) => c.ListAuthorsComponent\n      ) /* */,\n  },\n  {\n    path: 'authors/:author',\n    loadComponent: () =>\n      import(\n        './components/list-cites-by-authors/list-cites-by-authors.component'\n      ).then((c) => c.ListCitesByAuthorsComponent) /* */,\n  },\n  {\n    path: 'random',\n    loadComponent: () =>\n      import('./components/random/random.component').then(\n        (c) => c.RandomComponent\n      ) /* */,\n  },\n  {\n    path: 'search',\n    loadComponent: () =>\n      import('./components/list-cites/list-cites.component').then(\n        (c) => c.ListCitesComponent\n      ) /* */,\n  },\n  {\n    path: '**',\n    loadComponent: () =>\n      import('./components/pageNotFound/page-not-found.component').then(\n        (c) => c.PageNotFoundComponent\n      ) /* */,\n  },\n];\n","import { APP_ID, ApplicationConfig, importProvidersFrom } from '@angular/core';\nimport {\n  provideRouter,\n  withComponentInputBinding,\n  withRouterConfig,\n} from '@angular/router';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { Authors } from './services/Cites/Authors';\nimport { Cites } from './services/Cites';\nimport { Click } from './services/Click';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { routes } from './app.routes';\nimport { CiteOfTheDay } from './tools/CiteOfTheDay.service';\nimport { PagerService } from './services/Pager/pager.service';\nimport { Device } from './tools/Device';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    BrowserModule,\n    { provide: APP_ID, useValue: 'serverApp' },\n    provideRouter(\n      routes,\n      withComponentInputBinding(),\n      withRouterConfig({ onSameUrlNavigation: 'reload' })\n    ),\n    importProvidersFrom(\n      ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: environment.production,\n        // Register the ServiceWorker as soon as the app is stable\n        // or after 30 seconds (whichever comes first).\n        registrationStrategy: 'registerWhenStable:30000',\n      })\n    ),\n    Authors,\n    Cites,\n    Click,\n    Title,\n    PagerService,\n    Device,\n    provideAnimations(),\n  ],\n};\n","import { mergeApplicationConfig, ApplicationConfig } from '@angular/core';\nimport { provideServerRendering } from '@angular/platform-server';\nimport { appConfig } from './app.config';\n\nconst serverConfig: ApplicationConfig = {\n  providers: [provideServerRendering()],\n};\n\nexport const config = mergeApplicationConfig(appConfig, serverConfig);\n\n// mock for prerender\n// @ts-ignore\nglobal.navigator = {};\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { config } from './app/app.config.server';\n\nconst bootstrap = () => bootstrapApplication(AppComponent, config);\n\nexport default bootstrap;\n"],"mappings":"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","names":["BaseNavbarComponent","constructor","click","refreshRandom","…µ…µdirectiveInject","Click","selectors","decls","vars","template","BaseNavbarComponent_Template","rf","ctx","encapsulation","NavbarMobileComponent","BaseNavbarComponent","t","selectors","standalone","features","…µ…µInheritDefinitionFeature","…µ…µStandaloneFeature","decls","vars","consts","template","NavbarMobileComponent_Template","rf","ctx","i0","…µ…µelementStart","…µ…µnamespaceSVG","…µ…µelement","…µ…µelementEnd","…µ…µnamespaceHTML","…µ…µtext","…µ…µlistener","NavbarMobileComponent_Template_a_click_20_listener","refreshRandom","…µ…µadvance","…µ…µproperty","RouterLink","RouterLinkActive","encapsulation","SearchComponent","constructor","activatedRouter","router","ngUnsubscribe","Subject","ngOnInit","queryParamMap","subscribe","params","get","elSearchCite","nativeElement","value","ngOnDestroy","next","complete","ngAfterViewInit","fromEvent","pipe","map","event","currentTarget","debounceTime","takeUntil","navigate","queryParams","q","…µ…µdirectiveInject","ActivatedRoute","Router","selectors","viewQuery","SearchComponent_Query","rf","ctx","i0","…µ…µelement","NavbarDesktopComponent","BaseNavbarComponent","t","selectors","standalone","features","…µ…µInheritDefinitionFeature","…µ…µStandaloneFeature","decls","vars","consts","template","NavbarDesktopComponent_Template","rf","ctx","i0","…µ…µelementStart","…µ…µnamespaceSVG","…µ…µelement","…µ…µtext","…µ…µelementEnd","…µ…µnamespaceHTML","…µ…µlistener","NavbarDesktopComponent_Template_a_click_22_listener","refreshRandom","…µ…µadvance","…µ…µproperty","RouterLink","SearchComponent","RouterLinkActive","encapsulation","AppComponent","constructor","title","setTitle","…µ…µdirectiveInject","Title","selectors","standalone","features","…µ…µStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","…µ…µelementStart","…µ…µelement","…µ…µelementEnd","NavbarDesktopComponent","RouterOutlet","NavbarMobileComponent","encapsulation","SwPush","SwUpdate","ServiceWorkerModule","environment","production","routes","path","loadComponent","then","c","HomeComponent","ListCitesComponent","ListAuthorsComponent","ListCitesByAuthorsComponent","RandomComponent","PageNotFoundComponent","appConfig","providers","BrowserModule","provide","APP_ID","useValue","provideRouter","routes","withComponentInputBinding","withRouterConfig","onSameUrlNavigation","importProvidersFrom","ServiceWorkerModule","register","enabled","environment","production","registrationStrategy","Authors","Cites","Click","Title","PagerService","Device","provideAnimations","serverConfig","providers","provideServerRendering","config","mergeApplicationConfig","appConfig","global","navigator","bootstrap","bootstrapApplication","AppComponent","config"],"x_google_ignoreList":[5]}