{
  "version": 3,
  "sources": ["src/app/components/common/BasePaginatedComponent.ts", "src/app/components/pager/pager.component.ts"],
  "sourcesContent": ["export abstract class BasePaginatedComponent {\n  protected currentPage!: number;\n  protected itemsPerPage = 10;\n\n  getCurrentPage(): number {\n    return this.currentPage;\n  }\n\n  setCurrentPage(event: number): void {\n    this.currentPage = event;\n  }\n\n  getItemsPerPage(): number {\n    return this.itemsPerPage;\n  }\n\n  abstract setPaginatedList(ev: any[]): void;\n}\n", "/* eslint-disable prettier/prettier */\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { PagerService } from '../../services/Pager/pager.service';\nimport { PagerOptionsInterface } from '../../services/Pager/pager.interface';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport { NgIf, NgClass, NgFor } from '@angular/common';\n\n@Component({\n  selector: 'app-pager',\n  template: `\n    <nav>\n      @if (hasList()) {\n      <ul class=\"ng-pager nav\" aria-label=\"Pagination\">\n        <li class=\"w-12\">\n          <a\n            [ngClass]=\"{ disabled: previousIsDisabled() }\"\n            (click)=\"pager.goToFirstPage()\"\n          >\n            <span>{{ pager.getPagerItemList().getFirstEdges()[0].label }}</span>\n          </a>\n        </li>\n        <li class=\"w-12\">\n          <a\n            [ngClass]=\"{ disabled: previousIsDisabled() }\"\n            (click)=\"pager.goToPreviousPage()\"\n          >\n            <span>{{ pager.getPagerItemList().getFirstEdges()[1].label }}</span>\n          </a>\n        </li>\n\n        @for (item of pager.getPagerItemList().getNumbers(); track item) {\n        <li class=\"w-12\"\n        >\n          <a\n            [ngClass]=\"{ current: isCurrentPage(item.index) }\"\n            (click)=\"pager.goToPage(item.index)\"\n          >\n            <span>{{ item.label }}</span>\n          </a>\n        </li>\n        }\n\n        <li class=\"w-12\">\n          <a\n            [ngClass]=\"{ disabled: nextIsDisabled() }\"\n            (click)=\"pager.goToNextPage()\"\n          >\n            <span>{{ pager.getPagerItemList().getLastEdges()[0].label }}</span>\n          </a>\n        </li>\n        <li class=\"w-12\">\n          <a\n            [ngClass]=\"{ disabled: nextIsDisabled() }\"\n            (click)=\"pager.goToLastPage()\"\n          >\n            <span>{{ pager.getPagerItemList().getLastEdges()[1].label }}</span>\n          </a>\n        </li>\n      </ul>\n      }\n    </nav>\n  `,\n  styleUrls: ['./pager.component.scss'],\n  providers: [],\n  standalone: true,\n  imports: [NgClass],\n})\nexport class PagerComponent implements OnInit, OnChanges {\n  @Input() list: Array<any> | number = 0;\n  @Input() options?: PagerOptionsInterface;\n  private paginatedList: BehaviorSubject<Array<any>> = new BehaviorSubject(\n    this.pager.getPaginatedList()\n  );\n  @Output() paginatedList$ = this.paginatedList\n    .asObservable()\n    .pipe(filter((value) => !!value));\n\n  constructor(public pager: PagerService) {}\n\n  // do i need ngOnInit, or ngOnChanges is enough ?\n  ngOnInit(): void {\n    this.pager.init(this.list, this.options);\n    this.pager.currentOffset$.subscribe((value) => {\n      this.paginatedList.next(this.pager.getPaginatedList());\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const list = changes['list'];\n    if (!list) {\n      return;\n    }\n\n    if (list.isFirstChange()) {\n      return;\n    }\n\n    this.pager.init(list.currentValue, this.options);\n  }\n\n  previousIsDisabled(): boolean {\n    return this.pager.getCurrentPage() === this.pager.getPreviousPage();\n  }\n\n  nextIsDisabled(): boolean {\n    return this.pager.getCurrentPage() === this.pager.getNextPage();\n  }\n\n  isCurrentPage(index: number): boolean {\n    return this.pager.isCurrentPage(index);\n  }\n\n  hasList(): boolean {\n    if (typeof this.list === 'object') {\n      return this.pager.getTotalPage() > 1;\n    }\n\n    return false;\n  }\n}\n"],
  "mappings": "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",
  "names": ["BasePaginatedComponent", "constructor", "itemsPerPage", "getCurrentPage", "currentPage", "setCurrentPage", "event", "getItemsPerPage", "i0", "\u0275\u0275elementStart", "\u0275\u0275listener", "PagerComponent_Conditional_1_For_10_Template_a_click_1_listener", "restoredCtx", "\u0275\u0275restoreView", "_r6", "item_r2", "$implicit", "ctx_r5", "\u0275\u0275nextContext", "\u0275\u0275resetView", "pager", "goToPage", "index", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "ctx_r1", "isCurrentPage", "\u0275\u0275textInterpolate", "label", "PagerComponent_Conditional_1_Template_a_click_2_listener", "_r8", "ctx_r7", "goToFirstPage", "PagerComponent_Conditional_1_Template_a_click_6_listener", "ctx_r9", "goToPreviousPage", "\u0275\u0275repeaterCreate", "PagerComponent_Conditional_1_For_10_Template", "\u0275\u0275repeaterTrackByIdentity", "PagerComponent_Conditional_1_Template_a_click_12_listener", "ctx_r10", "goToNextPage", "PagerComponent_Conditional_1_Template_a_click_16_listener", "ctx_r11", "goToLastPage", "_c1", "ctx_r0", "previousIsDisabled", "getPagerItemList", "getFirstEdges", "\u0275\u0275repeater", "getNumbers", "nextIsDisabled", "getLastEdges", "PagerComponent", "constructor", "list", "paginatedList", "BehaviorSubject", "getPaginatedList", "paginatedList$", "asObservable", "pipe", "filter", "value", "ngOnInit", "init", "options", "currentOffset$", "subscribe", "next", "ngOnChanges", "changes", "isFirstChange", "currentValue", "getCurrentPage", "getPreviousPage", "getNextPage", "hasList", "getTotalPage", "\u0275\u0275directiveInject", "PagerService", "selectors", "inputs", "outputs", "standalone", "features", "\u0275\u0275ProvidersFeature", "\u0275\u0275NgOnChangesFeature", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "PagerComponent_Template", "rf", "ctx", "\u0275\u0275template", "PagerComponent_Conditional_1_Template", "\u0275\u0275conditional", "NgClass", "styles"]
}
