import './polyfills.server.mjs';
import{b as p,c as y,e as T,f as _,g as L}from"./chunk-TU67YKTC.mjs";import{c as C,d as E}from"./chunk-IX2CL4RB.mjs";import{Ab as m,Db as g,Gb as h,sb as c,yb as a,zb as R}from"./chunk-53P5ILL5.mjs";import"./chunk-25NAXU2X.mjs";async function*u(e,n,i,t=""){for(let r of e){let{path:o,redirectTo:l,loadChildren:w,children:f}=r;if(o===void 0)continue;let s=A(t,o);if(l!==void 0){yield{route:s,success:!1,redirect:!0};continue}if(/[:*]/.test(o)){yield{route:s,success:!1,redirect:!1};continue}if(yield{route:s,success:!0,redirect:!1},f?.length&&(yield*u(f,n,i,s)),w){let d=await C(r,n,i).toPromise();if(d){let{routes:P,injector:S=i}=d;yield*u(P,n,S,s)}}}}async function*F(e,n){let i=g(h,"server",[{provide:p,useValue:{document:n,url:""}},{provide:c,useFactory:()=>{class t extends c{ignoredLogs=new Set(["Angular is running in development mode."]);log(o){this.ignoredLogs.has(o)||super.log(o)}}return new t}},...y])();try{let t;N(e)?t=await e():t=(await i.bootstrapModule(e)).injector.get(a),await R(t);let r=t.injector,o=r.get(E);if(o.config.length===0)yield{route:"",success:!0,redirect:!1};else{let l=r.get(m);yield*u(o.config,l,r)}}finally{i.destroy()}}function N(e){return typeof e=="function"&&!("\u0275mod"in e)}function A(...e){return e.filter(Boolean).join("/")}export{F as extractRoutes,L as renderApplication,_ as renderModule,c as \u0275Console,T as \u0275SERVER_CONTEXT};
